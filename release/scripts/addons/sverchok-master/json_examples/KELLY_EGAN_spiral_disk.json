{
  "export_version": "0.062",
  "framed_nodes": {},
  "groups": {
    "Spiralli": "{\"nodes\": {\"function.004\": {\"location\": [-989.8991088867188, 278.4745178222656], \"width\": 140.0, \"label\": \"\", \"color\": [0.6079999804496765, 0.6079999804496765, 0.6079999804496765], \"params\": {\"y\": 2.5600013732910156, \"items_\": \"MUL\"}, \"bl_idname\": \"ScalarMathNode\", \"hide\": false, \"height\": 100.0}, \"function.006\": {\"location\": [-1340.099853515625, 278.4745178222656], \"width\": 140.0, \"label\": \"\", \"color\": [0.6079999804496765, 0.6079999804496765, 0.6079999804496765], \"params\": {\"y\": -3.0, \"items_\": \"MUL\"}, \"bl_idname\": \"ScalarMathNode\", \"hide\": false, \"height\": 100.0}, \"function.005\": {\"location\": [-827.9815673828125, 277.5683288574219], \"width\": 140.0, \"label\": \"\", \"color\": [0.6079999804496765, 0.6079999804496765, 0.6079999804496765], \"params\": {\"items_\": \"ADD\"}, \"bl_idname\": \"ScalarMathNode\", \"hide\": false, \"height\": 100.0}, \"Group Inputs Exp\": {\"location\": [-2258.1767578125, 277.04522705078125], \"width\": 140.0, \"label\": \"\", \"color\": [0.8308190107345581, 0.911391019821167, 0.7545620203018188], \"outputs\": [[\"Vectors\", \"VerticesSocket\"]], \"params\": {\"node_kind\": \"outputs\"}, \"bl_idname\": \"SvGroupInputsNodeExp\", \"hide\": false, \"height\": 100.0}, \"Frame\": {\"location\": [186.14854431152344, 330.5939025878906], \"width\": 1420.1951904296875, \"label\": \"\", \"color\": [0.6079999804496765, 0.6079999804496765, 0.6079999804496765], \"params\": {}, \"bl_idname\": \"NodeFrame\", \"hide\": false, \"height\": 425.06842041015625}, \"function.003\": {\"location\": [-1160.438232421875, 278.4745178222656], \"width\": 140.0, \"label\": \"\", \"color\": [0.6079999804496765, 0.6079999804496765, 0.6079999804496765], \"params\": {\"x\": 0.3200001120567322, \"y\": 2.0, \"items_\": \"COSINE\"}, \"bl_idname\": \"ScalarMathNode\", \"hide\": false, \"height\": 100.0}, \"Group Outputs Exp\": {\"location\": [366.1485595703125, 277.04522705078125], \"width\": 140.0, \"label\": \"\", \"color\": [0.8308190107345581, 0.911391019821167, 0.7545620203018188], \"params\": {\"node_kind\": \"inputs\"}, \"inputs\": [[\"Vectors\", \"VerticesSocket\"], [\"Polygons\", \"StringsSocket\"]], \"bl_idname\": \"SvGroupOutputsNodeExp\", \"hide\": false, \"height\": 100.0}, \"function\": {\"location\": [-1259.8173828125, 79.68720245361328], \"width\": 140.0, \"label\": \"\", \"color\": [0.6079999804496765, 0.6079999804496765, 0.6079999804496765], \"params\": {\"x\": 0.3200001120567322, \"y\": 2.0, \"items_\": \"COSINE\"}, \"bl_idname\": \"ScalarMathNode\", \"hide\": false, \"height\": 100.0}, \"Vector Math\": {\"location\": [-1837.634033203125, 79.68720245361328], \"width\": 140.0, \"label\": \"SCALAR\", \"color\": [0.6079999804496765, 0.6079999804496765, 0.6079999804496765], \"params\": {\"scalar_output_socket\": 0, \"items_\": \"SCALAR\"}, \"bl_idname\": \"VectorMathNode\", \"hide\": false, \"height\": 100.0}, \"Distances\": {\"location\": [-1657.6175537109375, 79.68720245361328], \"width\": 140.0, \"label\": \"\", \"color\": [0.6079999804496765, 0.6079999804496765, 0.6079999804496765], \"params\": {\"Cross_dist\": 0}, \"bl_idname\": \"DistancePPNode\", \"hide\": false, \"height\": 100.0}, \"Vectors polar out\": {\"location\": [-1510.506591796875, 278.4745178222656], \"width\": 100.0, \"label\": \"\", \"color\": [0.6079999804496765, 0.6079999804496765, 0.6079999804496765], \"params\": {}, \"bl_idname\": \"VectorPolarOutNode\", \"hide\": false, \"height\": 100.0}, \"Vectors out\": {\"location\": [-415.110595703125, 466.43896484375], \"width\": 140.0, \"label\": \"\", \"color\": [0.6079999804496765, 0.6079999804496765, 0.6079999804496765], \"params\": {}, \"bl_idname\": \"VectorsOutNode\", \"hide\": false, \"height\": 100.0}, \"Delaunay 2D\": {\"location\": [-228.07830810546875, 334.8793029785156], \"width\": 140.0, \"label\": \"\", \"color\": [0.6079999804496765, 0.6079999804496765, 0.6079999804496765], \"params\": {}, \"bl_idname\": \"DelaunayTriangulation2DNode\", \"hide\": false, \"height\": 100.0}, \"function.001\": {\"location\": [-1458.717529296875, 79.68720245361328], \"width\": 140.0, \"label\": \"\", \"color\": [0.6079999804496765, 0.6079999804496765, 0.6079999804496765], \"params\": {\"y\": 0.10000000149011612, \"items_\": \"MUL\"}, \"bl_idname\": \"ScalarMathNode\", \"hide\": false, \"height\": 100.0}, \"Float\": {\"location\": [-2048.1767578125, 79.68720245361328], \"width\": 140.0, \"label\": \"\", \"color\": [0.6079999804496765, 0.6079999804496765, 0.6079999804496765], \"params\": {\"float_\": -0.476999968290329}, \"bl_idname\": \"FloatNode\", \"hide\": false, \"height\": 100.0}, \"function.002\": {\"location\": [-1084.099365234375, 79.68720245361328], \"width\": 140.0, \"label\": \"\", \"color\": [0.6079999804496765, 0.6079999804496765, 0.6079999804496765], \"params\": {\"y\": 5.400000095367432, \"items_\": \"MUL\"}, \"bl_idname\": \"ScalarMathNode\", \"hide\": false, \"height\": 100.0}, \"Vectors in\": {\"location\": [-216.68788146972656, 474.40325927734375], \"width\": 113.182373046875, \"label\": \"\", \"color\": [0.6079999804496765, 0.6079999804496765, 0.6079999804496765], \"params\": {}, \"bl_idname\": \"GenVectorsNode\", \"hide\": false, \"height\": 100.0}}, \"export_version\": \"0.062\", \"framed_nodes\": {\"function.004\": \"Frame\", \"function.006\": \"Frame\", \"function.005\": \"Frame\", \"Distances\": \"Frame\", \"Vector Math\": \"Frame\", \"Vectors polar out\": \"Frame\", \"function.003\": \"Frame\", \"function.001\": \"Frame\", \"Float\": \"Frame\", \"function.002\": \"Frame\", \"function\": \"Frame\"}, \"cls_bl_idname\": \"SvGroupNodeMonad_138888784783\", \"update_lists\": [[\"Group Inputs Exp\", \"Vectors\", \"Vectors polar out\", \"Vectors\"], [\"Vectors polar out\", \"rho\", \"function.006\", \"X\"], [\"function.006\", \"float\", \"function.003\", \"X\"], [\"function.003\", \"float\", \"function.004\", \"X\"], [\"Group Inputs Exp\", \"Vectors\", \"Vectors out\", \"Vectors\"], [\"Group Inputs Exp\", \"Vectors\", \"Vector Math\", \"U\"], [\"Float\", \"Float\", \"Vector Math\", \"S\"], [\"Vector Math\", \"W\", \"Distances\", \"vertices1\"], [\"Group Inputs Exp\", \"Vectors\", \"Distances\", \"vertices2\"], [\"Distances\", \"distances\", \"function.001\", \"X\"], [\"function.001\", \"float\", \"function\", \"X\"], [\"function\", \"float\", \"function.002\", \"X\"], [\"function.004\", \"float\", \"function.005\", \"X\"], [\"function.002\", \"float\", \"function.005\", \"Y\"], [\"Vectors out\", \"X\", \"Vectors in\", \"X\"], [\"Vectors out\", \"Y\", \"Vectors in\", \"Y\"], [\"function.005\", \"float\", \"Vectors in\", \"Z\"], [\"Group Inputs Exp\", \"Vectors\", \"Delaunay 2D\", \"Vertices\"], [\"Vectors in\", \"Vectors\", \"Group Outputs Exp\", \"Vectors\"], [\"Delaunay 2D\", \"Polygons\", \"Group Outputs Exp\", \"Polygons\"]], \"bl_idname\": \"SverchGroupTreeType\", \"groups\": {}}"
  },
  "nodes": {
    "Monad": {
      "bl_idname": "SvMonadGenericNode",
      "color": [
        0.8308190107345581,
        0.911391019821167,
        0.7545620203018188
      ],
      "height": 100.0,
      "hide": false,
      "label": "",
      "location": [
        -306.8420715332031,
        462.87969970703125
      ],
      "params": {
        "cls_dict": {
          "cls_bl_idname": "SvGroupNodeMonad_138888784783",
          "input_template": [
            [
              "Vectors",
              "VerticesSocket",
              {}
            ]
          ],
          "output_template": [
            [
              "Vectors",
              "VerticesSocket"
            ],
            [
              "Polygons",
              "StringsSocket"
            ]
          ]
        },
        "monad": "Spiralli",
        "vectorize": 0
      },
      "width": 140.0
    },
    "Note": {
      "bl_idname": "NoteNode",
      "color": [
        1.0,
        0.8993440270423889,
        0.9742509722709656
      ],
      "height": 100.0,
      "hide": false,
      "label": "",
      "location": [
        -621.3333129882812,
        584.2412719726562
      ],
      "params": {
        "show_text": 0,
        "text": "KELLY   EGAN'    spiral disk layout   http://kellyegan.net/2016/07/Sverchok.html"
      },
      "width": 400.0
    },
    "Script Generator": {
      "bl_idname": "SvScriptNode",
      "color": [
        0.0,
        0.800000011920929,
        0.949999988079071
      ],
      "height": 100.0,
      "hide": false,
      "label": "spiral_fib.py",
      "location": [
        -608.43505859375,
        426.3199462890625
      ],
      "params": {
        "button_names": "",
        "files_popup": "separate_ver_hor_edges.py",
        "float_list": [
          0.0,
          1.0,
          2.0,
          3.0,
          4.0,
          5.0,
          6.0,
          7.0,
          8.0,
          9.0,
          10.0,
          11.0,
          12.0,
          13.0,
          14.0,
          15.0,
          16.0,
          17.0,
          18.0,
          19.0,
          20.0,
          21.0,
          22.0,
          23.0,
          24.0,
          25.0,
          26.0,
          27.0,
          28.0,
          29.0,
          30.0,
          31.0
        ],
        "has_buttons": 0,
        "int_list": [
          0,
          3000,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15,
          16,
          17,
          18,
          19,
          20,
          21,
          22,
          23,
          24,
          25,
          26,
          27,
          28,
          29,
          30,
          31
        ],
        "script_name": "spiral_fib.py",
        "script_str": "def sv_main(n=1000, c=0.1):\n\n    in_sockets = [\n        ['s', 'Number of points',  n],\n        ['s', 'Scale Factor',  c]\n    ]\n\n    from math import sin, cos, radians, pi, sqrt\n    from mathutils import Vector, Euler\n\n    Verts = []\n    verts_new = Verts.append\n\n    for i in range(0, n):\n        theta = i * radians(137.5)\n        r = c * sqrt(i)\n        verts_new((cos(theta) * r, sin(theta) * r, 0.0))\n\n    out_sockets = [\n        ['v', 'Verts', [Verts]]\n    ]\n\n    return in_sockets, out_sockets\n"
      },
      "width": 175.7708740234375
    },
    "Viewer Draw2": {
      "bl_idname": "ViewerNode2",
      "color": [
        1.0,
        0.30000001192092896,
        0.0
      ],
      "height": 100.0,
      "hide": false,
      "label": "",
      "location": [
        16.680580139160156,
        527.138671875
      ],
      "params": {
        "activate": 1,
        "display_edges": 0,
        "display_faces": 1,
        "display_verts": 0,
        "shading": 1,
        "transparant": 0
      },
      "width": 140.0
    }
  },
  "update_lists": [
    [
      "Script Generator",
      "Verts",
      "Monad",
      "Vectors"
    ],
    [
      "Monad",
      "Vectors",
      "Viewer Draw2",
      "vertices"
    ],
    [
      "Monad",
      "Polygons",
      "Viewer Draw2",
      "edg_pol"
    ]
  ]
}
